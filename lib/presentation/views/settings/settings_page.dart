import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:mansirus/config.dart';
import 'package:mansirus/presentation/views/talker/custom_talker_screen.dart';
import 'package:provider/provider.dart';
import 'package:talker_flutter/talker_flutter.dart';
import '../../widgets/widgets.dart';

class SettingsPage extends StatefulWidget {
  const SettingsPage({super.key});

  @override
  State<SettingsPage> createState() => _SettingsPageState();
}

class _SettingsPageState extends State<SettingsPage> {
  late String _selectedApiType;
  late TextEditingController _apiUrlController;

  @override
  void initState() {
    super.initState();
    _selectedApiType = AppConfig.apiType;
    _apiUrlController = TextEditingController(text: AppConfig.apiUrl);
  }

  @override
  void dispose() {
    _apiUrlController.dispose();
    super.dispose();
  }

  void _saveSettings() {
    AppConfig.apiType = _selectedApiType;
    AppConfig.apiUrl = _apiUrlController.text;
    ScaffoldMessenger.of(context).showSnackBar(
      const SnackBar(content: Text('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')),
    );
  }

  @override
  Widget build(BuildContext context) {
    final screenWidth = MediaQuery.of(context).size.width;
    final screenHeight = MediaQuery.of(context).size.height;
    final talker = context.read<Talker>();

    return Scaffold(
      backgroundColor: const Color(0xFFF7F9FC),
      body: SafeArea(
        child: SingleChildScrollView(
          padding: EdgeInsets.all(screenWidth * 0.08),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
                style: GoogleFonts.montserrat(
                  fontSize: screenWidth * 0.06,
                  fontWeight: FontWeight.bold,
                  color: Colors.black87,
                ),
              ),
              SizedBox(height: screenHeight * 0.02),
              // –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ InfoItem
              InfoItem(
                title: 'Mansirus',
                subtitle:
                    '–£–¥–æ–±–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –∏–∑—É—á–µ–Ω–∏—è –º–∞–Ω—Å–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞. –°–æ—Ö—Ä–∞–Ω—è—è —è–∑—ã–∫, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫—É–ª—å—Ç—É—Ä—É!',
                icon: Icons.translate,
              ),
              InfoItem(
                title: '–í–µ—Ä—Å–∏—è',
                subtitle:
                    'Mansirus v0.3.0\n–ü—Ä–æ—Å–∏–º –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ —ç—Ç–∞ –≤–µ—Ä—Å–∏—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.',
                icon: Icons.info,
                onTap: () {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                        builder: (_) => CustomTalkerScreen(talker: talker)),
                  );
                  // –î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
                },
              ),

              InfoItem(
                title: '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
                subtitle:
                    'Melgaziev Emir R.\nTelegram: @emlgzv\nüåê m1rmen.tech',
                icon: Icons.person,
              ),
              InfoItem(
                title: 'API',
                subtitle:
                    '–¢–µ–∫—É—â–∏–π —Å–µ—Ä–≤–∏—Å: ${_selectedApiType == 'custom' ? '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π' : '–Æ–ù–ò–ò–¢'}\n–ê–¥—Ä–µ—Å: ${_apiUrlController.text}',
                icon: Icons.api,
              ),
              InfoItem(
                title: '–ú–æ–¥–µ–ª—å',
                subtitle:
                    '–ú–æ–¥–µ–ª—å –º–∞—à–∏–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ nllb-200-3.3B-ru-mns-2.0.2 (–Æ–ù–ò–ò–¢)',
                icon: Icons.computer,
              ),
              InfoItem(
                title: '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å',
                subtitle: 'github.com/mirmen/mansirus',
                icon: Icons.email,
              ),
              SizedBox(height: screenHeight * 0.02),
              // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API
              Text(
                '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ API',
                style: GoogleFonts.montserrat(
                  fontSize: screenWidth * 0.06,
                  fontWeight: FontWeight.bold,
                  color: Colors.black87,
                ),
              ),
              SizedBox(height: screenHeight * 0.02),
              Container(
                padding: const EdgeInsets.all(16),
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(12),
                  boxShadow: [
                    BoxShadow(
                      color: Colors.black.withOpacity(0.1),
                      blurRadius: 10,
                      offset: const Offset(0, 4),
                    ),
                  ],
                ),
                child: Column(
                  children: [
                    DropdownButtonFormField<String>(
                      value: _selectedApiType,
                      items: [
                        DropdownMenuItem(
                          value: 'custom',
                          child: Text(
                            '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π API',
                            style: GoogleFonts.montserrat(),
                          ),
                        ),
                        DropdownMenuItem(
                          value: 'uriit',
                          child: Text(
                            'API –æ—Ç –Æ–ù–ò–ò–¢',
                            style: GoogleFonts.montserrat(),
                          ),
                        ),
                      ],
                      onChanged: (value) {
                        if (value != null) {
                          setState(() => _selectedApiType = value);
                        }
                      },
                      dropdownColor:
                          Colors.white, // –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
                      icon: Icon(Icons.arrow_drop_down,
                          color: Colors.black), // –¶–≤–µ—Ç –∏–∫–æ–Ω–∫–∏
                      decoration: InputDecoration(
                        labelText: '–¢–∏–ø —Å–µ—Ä–≤–∏—Å–∞',
                        labelStyle: TextStyle(
                            color: Colors.black), // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –ª–µ–π–±–ª–∞
                        filled: true,
                        fillColor: Colors.white, // –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –ø–æ–ª—è
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(8),
                          borderSide:
                              BorderSide(color: Colors.black87), // –¶–≤–µ—Ç –≥—Ä–∞–Ω–∏—Ü—ã
                        ),
                        focusedBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(8),
                          borderSide: BorderSide(
                              color: Colors.black87,
                              width: 2), // –ê–∫—Ç–∏–≤–Ω–∞—è –≥—Ä–∞–Ω–∏—Ü–∞
                        ),
                      ),
                    ),
                    SizedBox(height: screenHeight * 0.02),
                    TextFormField(
                      controller: _apiUrlController,
                      decoration: InputDecoration(
                        labelText: '–ê–¥—Ä–µ—Å API',
                        labelStyle: TextStyle(
                            color: Colors.black), // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –ª–µ–π–±–ª–∞
                        hintText: 'https://api.example.com',
                        filled: true,
                        fillColor: Colors.white, // –¶–≤–µ—Ç —Ñ–æ–Ω–∞
                        border: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(8),
                          borderSide:
                              BorderSide(color: Colors.black), // –ì—Ä–∞–Ω–∏—Ü–∞
                        ),
                        focusedBorder: OutlineInputBorder(
                          borderRadius: BorderRadius.circular(8),
                          borderSide: BorderSide(
                              color: Colors.black87,
                              width: 2), // –ê–∫—Ç–∏–≤–Ω–∞—è –≥—Ä–∞–Ω–∏—Ü–∞
                        ),
                        suffixIcon: IconButton(
                          icon: Icon(Icons.save,
                              color: Colors.black87), // –¶–≤–µ—Ç –∏–∫–æ–Ω–∫–∏
                          onPressed: _saveSettings,
                        ),
                      ),
                      style: GoogleFonts.montserrat(
                          color: Colors.black87), // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
                    ),
                  ],
                ),
              ),
              SizedBox(height: screenHeight * 0.02),
              Center(
                child: ElevatedButton.icon(
                  icon: const Icon(
                    Icons.save_rounded,
                    color: Colors.white,
                  ),
                  label: Text(
                    '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
                    style: GoogleFonts.montserrat(
                      fontSize: 16,
                      color: Colors.white, // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
                    ),
                  ),
                  onPressed: _saveSettings,
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.black, // –¶–≤–µ—Ç —Ñ–æ–Ω–∞
                    padding: const EdgeInsets.symmetric(
                        horizontal: 24, vertical: 16),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(12),
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
